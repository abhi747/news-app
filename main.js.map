{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/header/navbar/navbar.component.css","webpack:///./src/app/components/header/navbar/navbar.component.html","webpack:///./src/app/components/header/navbar/navbar.component.ts","webpack:///./src/app/components/news-list/news-item/news-item.component.css","webpack:///./src/app/components/news-list/news-item/news-item.component.html","webpack:///./src/app/components/news-list/news-item/news-item.component.ts","webpack:///./src/app/components/news-list/news-list.component.css","webpack:///./src/app/components/news-list/news-list.component.html","webpack:///./src/app/components/news-list/news-list.component.ts","webpack:///./src/app/services/news.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"    <app-header></app-header>\\r\\n    <app-news-list></app-news-list>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { NavbarComponent } from './components/header/navbar/navbar.component';\r\nimport { NewsListComponent } from './components/news-list/news-list.component';\r\nimport { NewsItemComponent } from './components/news-list/news-item/news-item.component';\r\nimport { NewsService } from './services/news.service';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    NavbarComponent,\r\n    NewsListComponent,\r\n    NewsItemComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [NewsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".navbar-brand {\\r\\n    letter-spacing: 4px;\\r\\n    font-family: 'Roboto'\\r\\n}\\r\\n.nav-item {\\r\\n    font-size: 12px;\\r\\n}\\r\\n/* @media only screen and (max-width: 576px) {\\r\\n    .navbar-nav{\\r\\n        display: none !important;\\r\\n    }\\r\\n}\\r\\n */\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\\\">\\r\\n    <!-- Brand -->\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeCategory('')\\\">The Times</a>\\r\\n\\r\\n    <!-- Toggler/collapsibe Button -->\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <!-- Navbar links -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n            <li class=\\\"nav-item\\\" *ngFor=\\\"let cat of categoryList\\\">\\r\\n                <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeCategory(cat)\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">{{cat}}</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { NewsService } from '../../services/news.service'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    categoryList = ['General','Business','Entertainment','Health','Science','Sports','Technology'];\r\n    constructor(private _newService: NewsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n    changeCategory(cat: string) {\r\n        this._newService.changeCategory(cat);\r\n    }\r\n\r\n}\r\n","module.exports = \".navbar {\\r\\n    font-size: 13px;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.navborder  {\\r\\n    background-color: #f3f5f7;\\r\\n    padding: 25px 0px;\\r\\n    box-shadow: 0 2px 5px 0 gray;\\r\\n    letter-spacing: 4px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid bg-light navborder\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-5 container\\\">\\r\\n            <nav class=\\\"navbar navbar-expand-sm\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 1</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 3</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"* {\\r\\n    font-family: 'Roboto';\\r\\n}\\r\\n .row {\\r\\n    min-height: 180px;\\r\\n    position: relative;\\r\\n}\\r\\n .title {\\r\\n    font-weight: 400;\\r\\n}\\r\\n .desc {\\r\\n    margin-top: 10px;\\r\\n    text-align: justify;\\r\\n    line-height: 1.4;\\r\\n    font-size: 12px;\\r\\n    font-weight: 300;\\r\\n}\\r\\n .img {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-size: cover;\\r\\n    background-position: center center;\\r\\n    background-repeat: no-repeat;\\r\\n}\\r\\n .reflink {\\r\\n    font-size: 10px;\\r\\n    position: absolute;\\r\\n    bottom: 0px;\\r\\n}\\r\\n .metadata {\\r\\n     font-size: 10px;\\r\\n     color: gray;\\r\\n     margin-top: 3px;\\r\\n}\\r\\n @media only screen and (max-width: 768px) {\\r\\n    .card-img {\\r\\n        min-height: 200px;\\r\\n        margin-bottom: 15px;\\r\\n    }\\r\\n}\\r\\n @media only screen and (min-width: 768px) {\\r\\n    /* .row {\\r\\n        min-height: 180px;\\r\\n        position: relative;\\r\\n    } */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<li class=\\\"list-group-item mb-3 shadow\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 card-img\\\">\\r\\n                <div [style.backgroundImage]=\\\"'url('+ newsItem.urlToImage +')'\\\" *ngIf=\\\"newsItem.urlToImage; else blankimage\\\" class=\\\"img\\\">\\r\\n                </div>\\r\\n                <ng-template #blankimage>\\r\\n                    <div [style.backgroundImage]=\\\"'url(../../assets/images/blank.jpeg)'\\\" class=\\\"img\\\"></div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <h6 class=\\\"title\\\">{{newsItem.title}}</h6>\\r\\n                <p class=\\\"metadata\\\">\\r\\n                    <span *ngIf=\\\"newsItem.author\\\" >by {{newsItem.author}}</span>\\r\\n                    <span *ngIf=\\\"newsItem.publishedAt\\\">\\r\\n                        <span *ngIf=\\\"newsItem.author\\\"> | </span>\\r\\n                        {{newsItem.publishedAt | date :'short'}}\\r\\n                    </span>\\r\\n                </p>\\r\\n                <p class=\\\"desc\\\">{{newsItem.description}}</p>\\r\\n                <br><br>\\r\\n                <p class=\\\"reflink\\\">\\r\\n                    <i>Read more at <a [href]=\\\"newsItem.url\\\" target=\\\"_blank\\\">{{newsItem.source.name}}</a></i>\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-news-item',\r\n  templateUrl: './news-item.component.html',\r\n  styleUrls: ['./news-item.component.css']\r\n})\r\nexport class NewsItemComponent implements OnInit {\r\n\r\n  @Input() newsItem;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".mgtp {\\r\\n    margin-top: 90px;\\r\\n}\\r\\n.pg {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"container mgtp list-group col-md-8 col-lg-6\\\">\\r\\n    <div *ngFor = \\\"let newsItem of newsList?.articles |\\r\\n                    paginate: { itemsPerPage: 7, currentPage: p, totalItems: newsList?.totalResults }\\\">\\r\\n        <app-news-item [newsItem]=\\\"newsItem\\\"></app-news-item>\\r\\n    </div>\\r\\n    <div class=\\\"pg\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p = $event; getNews(cat,p,$event)\\\"></pagination-controls>\\r\\n    </div>\\r\\n</ul>\\r\\n<ngx-spinner></ngx-spinner>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NewsService } from '../../services/news.service';\r\nimport { News } from '../../interfaces/news';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-news-list',\r\n  templateUrl: './news-list.component.html',\r\n  styleUrls: ['./news-list.component.css']\r\n})\r\nexport class NewsListComponent implements OnInit {\r\n\r\n  newsList: News;\r\n  p: number = 1; //initialize page index in pagination\r\n  cat: string = ''; //initialize category\r\n\r\n    constructor(private _newsService: NewsService, private spinner: NgxSpinnerService) {\r\n      _newsService.categoryChangeListener.subscribe((data) => {\r\n          this.p = 1; //reset page index to 1 on category change\r\n          this.cat = data.category;\r\n          this.getNews(this.cat,1);\r\n      });\r\n   }\r\n\r\n  ngOnInit() {\r\n      this.getNews(this.cat,1); //get news on initial page load\r\n  }\r\n\r\n  getNews(cat, page){\r\n      this.spinner.show();\r\n      this._newsService.getTopHeadLines(cat, 'in', this.p).subscribe(\r\n          (newsList: News) => {\r\n              this.newsList = newsList;\r\n              this.spinner.hide();\r\n            },\r\n          (err) => {\r\n              console.error(err);\r\n              this.spinner.hide();\r\n          }\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { News } from '../interfaces/news';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsService {\r\n\r\n    @Output() categoryChangeListener = new EventEmitter();\r\n\r\n  constructor( private _http: HttpClient ) { }\r\n\r\n    getTopHeadLines(category: string, country: string, page: number): Observable<News> {\r\n        const url = `https://newsapi.org/v2/top-headlines`;\r\n        let headers = new HttpHeaders({'X-Api-Key': environment.apiKey});\r\n        let params = new HttpParams().set('language', 'en')\r\n                    .append('category', category)\r\n                    .append('country', country)\r\n                    .append('page', page.toString())\r\n                    .append('pageSize', \"7\");\r\n        return this._http.get<News>(url, {headers: headers,params: params});\r\n    }\r\n    getCategorizedNews(): Observable<News> {\r\n        const url = `https://newsapi.org/v2/everything`;\r\n        let headers = new HttpHeaders({ 'X-Api-Key': environment.apiKey });\r\n        let params = new HttpParams().set('language', 'en');\r\n        return this._http.get<News>(url, { headers: headers, params: params });\r\n    }\r\n\r\n    changeCategory(cat: string) {\r\n        this.categoryChangeListener.emit({ category: cat});\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n    apiKey: `e27c1da3c4fe4c1ca2e7486b2df6bf4a`\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}